<?xml version="1.0" encoding="utf-8"?><!--
  ~ Copyright (c) 2021. Samsung Electronics Co., Ltd.
  ~ @author YOUNGJIN JO (yjspecial.jo@samsung.com) IMS Platform team / CP Solution R&D
  ~
  ~ All right reserved. This software is the confidential and proprietary
  ~ information of Samsung Electronics ("Confidential Information").
  ~ You shall not disclose such Confidential Information and shall use it
  ~ only in accordance with the terms of the license agreement you
  ~ entered into with Samsung Electronics.
  -->

<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <androidx.drawerlayout.widget.DrawerLayout
        android:id="@+id/drawer_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:fitsSystemWindows="true"
        tools:openDrawer="start">

        <include
            android:id="@+id/app_bar_main"
            layout="@layout/app_bar_main"
            android:layout_width="match_parent"
            android:layout_height="match_parent" />

        <com.google.android.material.navigation.NavigationView
            android:id="@+id/nav_view"
            android:layout_width="wrap_content"
            android:layout_height="match_parent"
            android:layout_gravity="start"
            android:fitsSystemWindows="true"
            app:headerLayout="@layout/nav_header_main"
            app:menu="@menu/navigation_menu_drawer" />
    </androidx.drawerlayout.widget.DrawerLayout>
</layout>
---------------------------------------------
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    tools:context=".ui.viewers.fragments.NewPageFragment">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent">
        
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <!-- Repeat this block for 5 rows -->
            <androidx.cardview.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="16dp"
                app:cardCornerRadius="8dp"
                app:cardElevation="4dp">

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="vertical"
                    android:padding="8dp">

                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="horizontal"
                        android:gravity="center_vertical">

                        <TextView
                            android:layout_width="0dp"
                            android:layout_height="wrap_content"
                            android:layout_weight="1"
                            android:text="Row 1"
                            android:textAppearance="?android:attr/textAppearanceListItem" />

                        <ImageButton
                            android:id="@+id/expand_button_1"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:src="@drawable/ic_expand_more"
                            android:contentDescription="@string/expand"
                            android:onClick="toggleVisibility" />
                    </LinearLayout>

                    <LinearLayout
                        android:id="@+id/extra_rows_1"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="vertical"
                        android:visibility="gone"
                        android:paddingStart="16dp">

                        <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:text="Extra Row 1.1"
                            android:textAppearance="?android:attr/textAppearanceListItem" />

                        <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:text="Extra Row 1.2"
                            android:textAppearance="?android:attr/textAppearanceListItem" />
                    </LinearLayout>
                </LinearLayout>
            </androidx.cardview.widget.CardView>
            <!-- Repeat until here -->

        </LinearLayout>
    </ScrollView>
</LinearLayout>

---------------------------------------------------
package com.sec.imslogger.ui.viewers.fragments

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.LinearLayout
import androidx.fragment.app.Fragment
import com.sec.imslogger.R

class NewPageFragment : Fragment() {

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        val view = inflater.inflate(R.layout.new_page_fragment, container, false)

        // Set up click listeners to toggle visibility of extra rows
        setupToggle(view, R.id.expand_button_1, R.id.extra_rows_1)
        // Repeat for other rows...

        return view
    }

    private fun setupToggle(view: View, buttonId: Int, layoutId: Int) {
        val button: View = view.findViewById(buttonId)
        val layout: LinearLayout = view.findViewById(layoutId)
        button.setOnClickListener {
            if (layout.visibility == View.VISIBLE) {
                layout.visibility = View.GONE
            } else {
                layout.visibility = View.VISIBLE
            }
        }
    }
}

---------------------------------------------------------
