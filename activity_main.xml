package com.sec.imslogger.data

import android.content.Context
import android.net.Uri
import android.widget.TableLayout
import android.widget.TableRow
import android.widget.TextView

class RcsDbQuery(context: Context) : BaseMCSDBQuery(context, Uri.parse("content://rcs")) {

    fun queryAndFillTable(table: TableLayout) {
        val cursor = query()
        cursor?.let {
            // Dynamically create headers based on column names
            if (it.moveToFirst()) {
                val columnNames = it.columnNames
                val headerRow = TableRow(context)
                for (columnName in columnNames) {
                    headerRow.addView(createTextView(columnName))
                }
                table.addView(headerRow)

                // Fill the table with data
                do {
                    val dataRow = TableRow(context)
                    for (columnName in columnNames) {
                        val value = it.getString(it.getColumnIndex(columnName))
                        dataRow.addView(createTextView(value ?: ""))
                    }
                    table.addView(dataRow)
                } while (it.moveToNext())
            }
            it.close()
        }
    }

    private fun createTextView(text: String): TextView {
        return TextView(context).apply {
            setText(text)
            layoutParams = TableRow.LayoutParams(
                TableRow.LayoutParams.WRAP_CONTENT,
                TableRow.LayoutParams.WRAP_CONTENT
            )
            setPadding(8, 8, 8, 8)
        }
    }

    fun exampleFunction(slotId: String) {
        // Implement function logic here using slotId
    }
}

--------------------
package com.sec.imslogger.data

import android.content.Context
import android.net.Uri
import android.widget.TableLayout
import android.widget.TableRow
import android.widget.TextView

class MmsDbQuery(context: Context) : BaseMCSDBQuery(context, Uri.parse("content://mms")) {

    fun queryAndFillTable(table: TableLayout) {
        val cursor = query()
        cursor?.let {
            // Dynamically create headers based on column names
            if (it.moveToFirst()) {
                val columnNames = it.columnNames
                val headerRow = TableRow(context)
                for (columnName in columnNames) {
                    headerRow.addView(createTextView(columnName))
                }
                table.addView(headerRow)

                // Fill the table with data
                do {
                    val dataRow = TableRow(context)
                    for (columnName in columnNames) {
                        val value = it.getString(it.getColumnIndex(columnName))
                        dataRow.addView(createTextView(value ?: ""))
                    }
                    table.addView(dataRow)
                } while (it.moveToNext())
            }
            it.close()
        }
    }

    private fun createTextView(text: String): TextView {
        return TextView(context).apply {
            setText(text)
            layoutParams = TableRow.LayoutParams(
                TableRow.LayoutParams.WRAP_CONTENT,
                TableRow.LayoutParams.WRAP_CONTENT
            )
            setPadding(8, 8, 8, 8)
        }
    }

    fun exampleFunction(slotId: String) {
        // Implement function logic here using slotId
    }
}
------------------------
package com.sec.imslogger.data

import android.content.Context
import android.net.Uri
import android.widget.TableLayout
import android.widget.TableRow
import android.widget.TextView

class SmsDbQuery(context: Context) : BaseMCSDBQuery(context, Uri.parse("content://sms")) {

    fun queryAndFillTable(table: TableLayout) {
        val cursor = query()
        cursor?.let {
            // Dynamically create headers based on column names
            if (it.moveToFirst()) {
                val columnNames = it.columnNames
                val headerRow = TableRow(context)
                for (columnName in columnNames) {
                    headerRow.addView(createTextView(columnName))
                }
                table.addView(headerRow)

                // Fill the table with data
                do {
                    val dataRow = TableRow(context)
                    for (columnName in columnNames) {
                        val value = it.getString(it.getColumnIndex(columnName))
                        dataRow.addView(createTextView(value ?: ""))
                    }
                    table.addView(dataRow)
                } while (it.moveToNext())
            }
            it.close()
        }
    }

    private fun createTextView(text: String): TextView {
        return TextView(context).apply {
            setText(text)
            layoutParams = TableRow.LayoutParams(
                TableRow.LayoutParams.WRAP_CONTENT,
                TableRow.LayoutParams.WRAP_CONTENT
            )
            setPadding(8, 8, 8, 8)
        }
    }

    fun exampleFunction(slotId: String) {
        // Implement function logic here using slotId
    }
}
